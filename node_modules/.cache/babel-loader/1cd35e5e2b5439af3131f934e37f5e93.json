{"remainingRequest":"C:\\Users\\cr7ad\\go\\src\\github.com\\xdragon1015\\sheltershell\\frontend\\shelterui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\cr7ad\\go\\src\\github.com\\xdragon1015\\sheltershell\\frontend\\shelterui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\cr7ad\\go\\src\\github.com\\xdragon1015\\sheltershell\\frontend\\shelterui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\cr7ad\\go\\src\\github.com\\xdragon1015\\sheltershell\\frontend\\shelterui\\src\\components\\DashBoard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\cr7ad\\go\\src\\github.com\\xdragon1015\\sheltershell\\frontend\\shelterui\\src\\components\\DashBoard.vue","mtime":1569147660988},{"path":"C:\\Users\\cr7ad\\go\\src\\github.com\\xdragon1015\\sheltershell\\frontend\\shelterui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\cr7ad\\go\\src\\github.com\\xdragon1015\\sheltershell\\frontend\\shelterui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\cr7ad\\go\\src\\github.com\\xdragon1015\\sheltershell\\frontend\\shelterui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\cr7ad\\go\\src\\github.com\\xdragon1015\\sheltershell\\frontend\\shelterui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar keyAPI = \"b63e8965c5e1631e57d5c87eaa0b8fd4\";\nvar AccountSID = \"AC36e4053e614b15fe37b4ac51dc065217\";\nvar pn = \"+12563635545\";\nvar mn = \"+17547154916\";\nexport default {\n  name: \"DashBoard\",\n  props: {\n    user: Object\n  },\n  data: function data() {\n    return {\n      center: {\n        lat: 45.508,\n        lng: -73.587\n      },\n      markers: [],\n      places: [],\n      user: {\n        selectedShelter: [{}]\n      },\n      currentPlace: null,\n      selected: null,\n      options: [{\n        value: null,\n        text: \"Please select an option\"\n      }, {\n        value: \"a\",\n        text: \"This is First option\"\n      }, {\n        value: \"b\",\n        text: \"Selected Option\"\n      }, {\n        value: {\n          C: \"3PO\"\n        },\n        text: \"This is an option with object value\"\n      }, {\n        value: \"d\",\n        text: \"This one is disabled\",\n        disabled: true\n      }],\n      capacity: 0\n    };\n  },\n  watch: {\n    capacity: function capacity(newVal, oldVal) {\n      console.log(newVal);\n      fetch(\"http://localhost:3000/getCalls\", {\n        method: 'post',\n        body: this.capacity\n      }).then(function (res, err) {\n        if (err) {\n          console.log(\"Problem with server\");\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    var fakeData = {\n      data: [25.738426, -80.36898, 25.744611, -80.344279]\n    };\n\n    if (fakeData == null || fakeData.data.length == 0) {\n      console.log(\"No Shelters\");\n    }\n  },\n  created: function created() {\n    this.geolocate();\n  },\n  methods: {\n    addMarker: function addMarker(lat, lon) {\n      if (this.currentPlace) {\n        var marker = {\n          lat: this.currentPlace.geometry.location.lat(),\n          lng: this.currentPlace.geometry.location.lng()\n        };\n        this.markers.push({\n          position: marker\n        });\n        this.places.push(this.currentPlace);\n        this.center = marker;\n        this.currentPlace = null;\n      }\n    },\n    decresedToZero: function decresedToZero() {\n      this.capacity++;\n    },\n    setPlace: function setPlace(place) {\n      this.currentPlace = place;\n    },\n    geolocate: function geolocate() {\n      var _this = this;\n\n      navigator.geolocation.getCurrentPosition(function (position) {\n        _this.center = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n\n        _this.markers.push({\n          position: _this.center\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["DashBoard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"dashboard\">\r\n    <div class=\"navigation\" id=\"myTopnav\">\r\n      <b-navbar toggleable=\"lg\" type=\"dark\" variant=\"info\">\r\n        <b-navbar-brand href=\"#\">HURRICANE RELIEF</b-navbar-brand>\r\n\r\n        <b-navbar-toggle target=\"nav-collapse\"></b-navbar-toggle>\r\n\r\n        <b-collapse id=\"nav-collapse\" is-nav>\r\n          <div style=\"margin-left: 0;\">\r\n            <b-navbar-nav>\r\n              <b-navbar-nav class=\"ml-auto\">\r\n                <b-nav-form class=\"ml-auto\">\r\n                  <b-form-input size=\"sm\" class=\"mr-sm-2\" placeholder=\"Search\"></b-form-input>\r\n                  <b-button size=\"sm\" class=\"my-2 my-sm-0\" type=\"submit\">Search</b-button>\r\n                </b-nav-form>\r\n              </b-navbar-nav>\r\n            </b-navbar-nav>\r\n          </div>\r\n\r\n          <!--Testing decresed property -->\r\n          <button v-on:click=\"decresedToZero()\">Hello World</button>\r\n\r\n          <div style=\"margin-left: 10px;\">\r\n            <b-navbar-nav class=\"ml-auto\">\r\n              <template>\r\n                <div>\r\n                  <b-form-select v-model=\"selected\" :options=\"options\" size=\"sm\" class=\"ml-auto\"></b-form-select>\r\n                </div>\r\n              </template>\r\n            </b-navbar-nav>\r\n          </div>\r\n          <!-- Right aligned nav items -->\r\n          <b-navbar-nav class=\"ml-auto\">\r\n            <b-nav-item-dropdown right>\r\n              <!-- Using 'button-content' slot -->\r\n              <template v-slot:button-content>\r\n                <em>User</em>\r\n              </template>\r\n              <b-dropdown-item href=\"#\">Profile</b-dropdown-item>\r\n              <b-dropdown-item href=\"#\">Sign Out</b-dropdown-item>\r\n            </b-nav-item-dropdown>\r\n          </b-navbar-nav>\r\n        </b-collapse>\r\n      </b-navbar>\r\n    </div>\r\n    <div id=\"left-side\">\r\n      <div>\r\n        <img src alt />\r\n      </div>\r\n    </div>\r\n    <div id=\"right-side\">\r\n      <div>\r\n        <gmap-map :center=\"center\" :zoom=\"12\" style=\"width:100%;  height: 700px;\">\r\n          <gmap-marker :key=\"index\" v-for=\"(m, index) in markers\" :position=\"m.position\"></gmap-marker>\r\n        </gmap-map>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst keyAPI = \"b63e8965c5e1631e57d5c87eaa0b8fd4\";\r\nconst AccountSID = \"AC36e4053e614b15fe37b4ac51dc065217\";\r\n\r\nconst pn = \"+12563635545\";\r\nconst mn = \"+17547154916\";\r\n\r\nexport default {\r\n  name: \"DashBoard\",\r\n  props: {\r\n    user: Object\r\n  },\r\n  data() {\r\n    return {\r\n      center: { lat: 45.508, lng: -73.587 },\r\n      markers: [],\r\n      places: [],\r\n      user: {\r\n        selectedShelter: [{}]\r\n      },\r\n      currentPlace: null,\r\n      selected: null,\r\n      options: [\r\n        { value: null, text: \"Please select an option\" },\r\n        { value: \"a\", text: \"This is First option\" },\r\n        { value: \"b\", text: \"Selected Option\" },\r\n        { value: { C: \"3PO\" }, text: \"This is an option with object value\" },\r\n        { value: \"d\", text: \"This one is disabled\", disabled: true }\r\n      ],\r\n      capacity: 0,\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    capacity: function(newVal, oldVal) {\r\n      console.log(newVal);\r\n      fetch(\"http://localhost:3000/getCalls\", {\r\n        method:'post',\r\n        body: this.capacity,\r\n      }).then((res, err) => {\r\n        if (err) {\r\n          console.log(\"Problem with server\")\r\n        }\r\n      })\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    let fakeData = {\r\n      data: [25.738426, -80.36898, 25.744611, -80.344279]\r\n    };\r\n\r\n    if (fakeData == null || fakeData.data.length == 0) {\r\n      console.log(\"No Shelters\");\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.geolocate();\r\n  },\r\n\r\n  methods: {\r\n    addMarker(lat, lon) {\r\n      if (this.currentPlace) {\r\n        const marker = {\r\n          lat: this.currentPlace.geometry.location.lat(),\r\n          lng: this.currentPlace.geometry.location.lng()\r\n        };\r\n        this.markers.push({ position: marker });\r\n        this.places.push(this.currentPlace);\r\n        this.center = marker;\r\n        this.currentPlace = null;\r\n      }\r\n    },\r\n\r\n    decresedToZero(){\r\n      this.capacity++;\r\n    },\r\n\r\n    setPlace(place) {\r\n      this.currentPlace = place;\r\n    },\r\n\r\n    geolocate: function() {\r\n      navigator.geolocation.getCurrentPosition(position => {\r\n        this.center = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude\r\n        };\r\n        this.markers.push({ position: this.center });\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n#dashboard {\r\n  background-color: white !important;\r\n}\r\n#left-side {\r\n  flex-grow: 1;\r\n  float: left;\r\n  text-align: left;\r\n  overflow: auto;\r\n  margin: auto;\r\n  width: 35%;\r\n}\r\n#right-side {\r\n  flex-grow: 4;\r\n  float: right;\r\n  margin: auto;\r\n  text-align: right;\r\n  width: 65%;\r\n}\r\n#app {\r\n  background-color: white !important;\r\n}\r\n</style>\r\n\r\n\r\n"],"sourceRoot":"src/components"}]}